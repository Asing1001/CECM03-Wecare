//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.34014
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace WeCarePhone.WeCarePhoneService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyStaff", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    public partial class MyStaff : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DivField;
        
        private string EduField;
        
        private string ExpField;
        
        private int IDField;
        
        private string JobField;
        
        private string NameField;
        
        private string NewCommentField;
        
        private byte[] PhotoField;
        
        private double ScoreField;
        
        private string SkillField;
        
        private string TelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Div {
            get {
                return this.DivField;
            }
            set {
                if ((object.ReferenceEquals(this.DivField, value) != true)) {
                    this.DivField = value;
                    this.RaisePropertyChanged("Div");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Edu {
            get {
                return this.EduField;
            }
            set {
                if ((object.ReferenceEquals(this.EduField, value) != true)) {
                    this.EduField = value;
                    this.RaisePropertyChanged("Edu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Exp {
            get {
                return this.ExpField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpField, value) != true)) {
                    this.ExpField = value;
                    this.RaisePropertyChanged("Exp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Job {
            get {
                return this.JobField;
            }
            set {
                if ((object.ReferenceEquals(this.JobField, value) != true)) {
                    this.JobField = value;
                    this.RaisePropertyChanged("Job");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewComment {
            get {
                return this.NewCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.NewCommentField, value) != true)) {
                    this.NewCommentField = value;
                    this.RaisePropertyChanged("NewComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Skill {
            get {
                return this.SkillField;
            }
            set {
                if ((object.ReferenceEquals(this.SkillField, value) != true)) {
                    this.SkillField = value;
                    this.RaisePropertyChanged("Skill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tel {
            get {
                return this.TelField;
            }
            set {
                if ((object.ReferenceEquals(this.TelField, value) != true)) {
                    this.TelField = value;
                    this.RaisePropertyChanged("Tel");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DrugRemind", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceWebRole1")]
    public partial class DrugRemind : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BeforeDaysField;
        
        private int CalendarIDField;
        
        private string DivisionField;
        
        private string EmailField;
        
        private string EventNameField;
        
        private System.DateTime EventTimeField;
        
        private bool IsRemindField;
        
        private string PatientNameField;
        
        private string PhoneNumberField;
        
        private bool WantBeRemindField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeforeDays {
            get {
                return this.BeforeDaysField;
            }
            set {
                if ((this.BeforeDaysField.Equals(value) != true)) {
                    this.BeforeDaysField = value;
                    this.RaisePropertyChanged("BeforeDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CalendarID {
            get {
                return this.CalendarIDField;
            }
            set {
                if ((this.CalendarIDField.Equals(value) != true)) {
                    this.CalendarIDField = value;
                    this.RaisePropertyChanged("CalendarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Division {
            get {
                return this.DivisionField;
            }
            set {
                if ((object.ReferenceEquals(this.DivisionField, value) != true)) {
                    this.DivisionField = value;
                    this.RaisePropertyChanged("Division");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName {
            get {
                return this.EventNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventNameField, value) != true)) {
                    this.EventNameField = value;
                    this.RaisePropertyChanged("EventName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EventTime {
            get {
                return this.EventTimeField;
            }
            set {
                if ((this.EventTimeField.Equals(value) != true)) {
                    this.EventTimeField = value;
                    this.RaisePropertyChanged("EventTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRemind {
            get {
                return this.IsRemindField;
            }
            set {
                if ((this.IsRemindField.Equals(value) != true)) {
                    this.IsRemindField = value;
                    this.RaisePropertyChanged("IsRemind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientName {
            get {
                return this.PatientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientNameField, value) != true)) {
                    this.PatientNameField = value;
                    this.RaisePropertyChanged("PatientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool WantBeRemind {
            get {
                return this.WantBeRemindField;
            }
            set {
                if ((this.WantBeRemindField.Equals(value) != true)) {
                    this.WantBeRemindField = value;
                    this.RaisePropertyChanged("WantBeRemind");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeCarePhoneService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState);
        
        string EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetStaffs", ReplyAction="http://tempuri.org/IService1/GetStaffsResponse")]
        System.IAsyncResult BeginGetStaffs(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.MyStaff> EndGetStaffs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetReminds", ReplyAction="http://tempuri.org/IService1/GetRemindsResponse")]
        System.IAsyncResult BeginGetReminds(System.DateTime date, int PatientID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.DrugRemind> EndGetReminds(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPatientID", ReplyAction="http://tempuri.org/IService1/GetPatientIDResponse")]
        System.IAsyncResult BeginGetPatientID(string IDentity, string PatientName, System.AsyncCallback callback, object asyncState);
        
        int EndGetPatientID(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WeCarePhone.WeCarePhoneService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStaffsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStaffsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.MyStaff> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.MyStaff>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRemindsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRemindsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.DrugRemind> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.DrugRemind>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPatientIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPatientIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WeCarePhone.WeCarePhoneService.IService1>, WeCarePhone.WeCarePhoneService.IService1 {
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStaffsDelegate;
        
        private EndOperationDelegate onEndGetStaffsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStaffsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRemindsDelegate;
        
        private EndOperationDelegate onEndGetRemindsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRemindsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPatientIDDelegate;
        
        private EndOperationDelegate onEndGetPatientIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPatientIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<GetStaffsCompletedEventArgs> GetStaffsCompleted;
        
        public event System.EventHandler<GetRemindsCompletedEventArgs> GetRemindsCompleted;
        
        public event System.EventHandler<GetPatientIDCompletedEventArgs> GetPatientIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WeCarePhone.WeCarePhoneService.IService1.BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string WeCarePhone.WeCarePhoneService.IService1.EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return ((WeCarePhone.WeCarePhoneService.IService1)(this)).BeginGetData(value, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            string retVal = ((WeCarePhone.WeCarePhoneService.IService1)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(int value) {
            this.GetDataAsync(value, null);
        }
        
        public void GetDataAsync(int value, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        value}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WeCarePhone.WeCarePhoneService.IService1.BeginGetStaffs(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStaffs(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.MyStaff> WeCarePhone.WeCarePhoneService.IService1.EndGetStaffs(System.IAsyncResult result) {
            return base.Channel.EndGetStaffs(result);
        }
        
        private System.IAsyncResult OnBeginGetStaffs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((WeCarePhone.WeCarePhoneService.IService1)(this)).BeginGetStaffs(callback, asyncState);
        }
        
        private object[] OnEndGetStaffs(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.MyStaff> retVal = ((WeCarePhone.WeCarePhoneService.IService1)(this)).EndGetStaffs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStaffsCompleted(object state) {
            if ((this.GetStaffsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStaffsCompleted(this, new GetStaffsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStaffsAsync() {
            this.GetStaffsAsync(null);
        }
        
        public void GetStaffsAsync(object userState) {
            if ((this.onBeginGetStaffsDelegate == null)) {
                this.onBeginGetStaffsDelegate = new BeginOperationDelegate(this.OnBeginGetStaffs);
            }
            if ((this.onEndGetStaffsDelegate == null)) {
                this.onEndGetStaffsDelegate = new EndOperationDelegate(this.OnEndGetStaffs);
            }
            if ((this.onGetStaffsCompletedDelegate == null)) {
                this.onGetStaffsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStaffsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStaffsDelegate, null, this.onEndGetStaffsDelegate, this.onGetStaffsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WeCarePhone.WeCarePhoneService.IService1.BeginGetReminds(System.DateTime date, int PatientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReminds(date, PatientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.DrugRemind> WeCarePhone.WeCarePhoneService.IService1.EndGetReminds(System.IAsyncResult result) {
            return base.Channel.EndGetReminds(result);
        }
        
        private System.IAsyncResult OnBeginGetReminds(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime date = ((System.DateTime)(inValues[0]));
            int PatientID = ((int)(inValues[1]));
            return ((WeCarePhone.WeCarePhoneService.IService1)(this)).BeginGetReminds(date, PatientID, callback, asyncState);
        }
        
        private object[] OnEndGetReminds(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.DrugRemind> retVal = ((WeCarePhone.WeCarePhoneService.IService1)(this)).EndGetReminds(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRemindsCompleted(object state) {
            if ((this.GetRemindsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRemindsCompleted(this, new GetRemindsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRemindsAsync(System.DateTime date, int PatientID) {
            this.GetRemindsAsync(date, PatientID, null);
        }
        
        public void GetRemindsAsync(System.DateTime date, int PatientID, object userState) {
            if ((this.onBeginGetRemindsDelegate == null)) {
                this.onBeginGetRemindsDelegate = new BeginOperationDelegate(this.OnBeginGetReminds);
            }
            if ((this.onEndGetRemindsDelegate == null)) {
                this.onEndGetRemindsDelegate = new EndOperationDelegate(this.OnEndGetReminds);
            }
            if ((this.onGetRemindsCompletedDelegate == null)) {
                this.onGetRemindsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRemindsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRemindsDelegate, new object[] {
                        date,
                        PatientID}, this.onEndGetRemindsDelegate, this.onGetRemindsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WeCarePhone.WeCarePhoneService.IService1.BeginGetPatientID(string IDentity, string PatientName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPatientID(IDentity, PatientName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int WeCarePhone.WeCarePhoneService.IService1.EndGetPatientID(System.IAsyncResult result) {
            return base.Channel.EndGetPatientID(result);
        }
        
        private System.IAsyncResult OnBeginGetPatientID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string IDentity = ((string)(inValues[0]));
            string PatientName = ((string)(inValues[1]));
            return ((WeCarePhone.WeCarePhoneService.IService1)(this)).BeginGetPatientID(IDentity, PatientName, callback, asyncState);
        }
        
        private object[] OnEndGetPatientID(System.IAsyncResult result) {
            int retVal = ((WeCarePhone.WeCarePhoneService.IService1)(this)).EndGetPatientID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPatientIDCompleted(object state) {
            if ((this.GetPatientIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPatientIDCompleted(this, new GetPatientIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPatientIDAsync(string IDentity, string PatientName) {
            this.GetPatientIDAsync(IDentity, PatientName, null);
        }
        
        public void GetPatientIDAsync(string IDentity, string PatientName, object userState) {
            if ((this.onBeginGetPatientIDDelegate == null)) {
                this.onBeginGetPatientIDDelegate = new BeginOperationDelegate(this.OnBeginGetPatientID);
            }
            if ((this.onEndGetPatientIDDelegate == null)) {
                this.onEndGetPatientIDDelegate = new EndOperationDelegate(this.OnEndGetPatientID);
            }
            if ((this.onGetPatientIDCompletedDelegate == null)) {
                this.onGetPatientIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPatientIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPatientIDDelegate, new object[] {
                        IDentity,
                        PatientName}, this.onEndGetPatientIDDelegate, this.onGetPatientIDCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WeCarePhone.WeCarePhoneService.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<WeCarePhone.WeCarePhoneService.IService1>, WeCarePhone.WeCarePhoneService.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<WeCarePhone.WeCarePhoneService.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStaffs(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStaffs", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.MyStaff> EndGetStaffs(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.MyStaff> _result = ((System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.MyStaff>)(base.EndInvoke("GetStaffs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetReminds(System.DateTime date, int PatientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = date;
                _args[1] = PatientID;
                System.IAsyncResult _result = base.BeginInvoke("GetReminds", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.DrugRemind> EndGetReminds(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.DrugRemind> _result = ((System.Collections.ObjectModel.ObservableCollection<WeCarePhone.WeCarePhoneService.DrugRemind>)(base.EndInvoke("GetReminds", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPatientID(string IDentity, string PatientName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = IDentity;
                _args[1] = PatientName;
                System.IAsyncResult _result = base.BeginInvoke("GetPatientID", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetPatientID(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetPatientID", _args, result)));
                return _result;
            }
        }
    }
}
